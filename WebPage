import numpy as np
import pickle
import streamlit as st
import pandas as pd
import numpy as np
import re
import emoji
import nltk
import warnings
warnings.filterwarnings("ignore")

nltk.download("stopwords")
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
port_stem=PorterStemmer()

#Loading the saved model
loaded_model = pickle.load(open('......','rb'))

vectorizer=pickle.load(open('......','rb'))
st.title("Twitter Sentiment Analysis")
input_tweet=st.text_area("Enter the tweet")

def stemming(content):
  # Remove URLs
  stemmed_content=re.sub(r'http\S+', '', content)
  # Convert emojis to text
  stemmed_content=emoji.demojize(stemmed_content)
  # Remove non-alphabetic characters and convert to lowercase
  stemmed_content= re.sub('[^a-zA-Z]',' ',stemmed_content)
  stemmed_content=stemmed_content.lower()
  # Tokenization and stemming
  stemmed_content=stemmed_content.split()
  stemmed_content=[port_stem.stem(word) for word in stemmed_content if not word in stopwords.words('english')]
  stemmed_content=' '.join(stemmed_content)
  
  return stemmed_content


if st.button('Predict'):

    # 1.Preprocess
    stemmed_content=stemming(input_tweet)
    # 2.Vectorize
    vector_input=vectorizer.transform([stemmed_content])
    # 3.Predict
    result=loaded_model.predict(vector_input)[0]
    # 4.Display
    if result == 0:
        st.header("Negative Sentiment")
    else:
        st.header("Positive Sentiment")
